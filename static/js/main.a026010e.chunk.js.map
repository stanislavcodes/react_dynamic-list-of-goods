{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","id","color","name","style","getAll","delay","Promise","resolve","setTimeout","then","fetch","response","json","GoodsType","get5First","sort","currentGood","nextGood","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","Default","currentGoodsType","setCurrentGoodsType","isLoading","setIsLoading","isLoadingError","setIsLoadingError","getLoadHandler","getGoods","goodsType","catch","finally","classnames","All","type","onClick","FirstFive","OnlyRed","length","ReactDOM","render","document","getElementById"],"mappings":"iNAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,SAACC,GACV,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAEnB,OACE,oBACEL,UAAS,0CACK,UAAVI,EAAoB,+BAAiC,GADhD,yBAEK,QAAVA,EAAkB,8BAAgC,GAF7C,yBAGK,SAAVA,EAAmB,4BAA8B,IAErD,UAAQ,OACRE,MAAO,CAAEF,SAPX,SASGC,GAJIF,SCTR,SAASI,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAKjDI,MAAK,kBAAMC,MARH,4EASRD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,UAP/B,IAAcP,EAUP,ICRFQ,EDQQC,EAAY,WACvB,OAAOV,IACJK,MAAK,SAACb,GAAD,OAAWA,EACdmB,MAAK,kBAASC,EAAT,EAAGd,KAA6Be,EAAhC,EAA0Bf,KAA1B,OACJc,EAAYE,cAAcD,MAE3BE,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOhB,IACJK,MAAK,SAACb,GAAD,OAAWA,EAAMyB,QAAO,kBAAyB,QAAzB,EAAGpB,c,SCnBhCY,O,qBAAAA,I,aAAAA,I,yBAAAA,I,sBAAAA,M,KAOE,IAAMS,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAc4B,EAAd,KACA,EAAgDD,mBAASV,EAAUY,SAAnE,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEMC,EAAiB,SACrBC,GAEI,IADJC,EACG,uDADSrB,EAAUY,QAEtB,OAAO,WACDC,IAAqBQ,IACvBL,GAAa,GACbE,GAAkB,GAClBE,IACGxB,KAAKe,GACLW,OAAM,kBAAMJ,GAAkB,MAC9BK,SAAQ,kBAAMP,GAAa,MAC9BF,EAAoBO,MAK1B,OACE,qBAAKrC,UAAU,OAAf,SACE,qBAAKA,UAAU,gDAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,0BAASA,UAAU,gBAAnB,UACE,oBAAIA,UAAU,kCAAd,mCAIA,sBACEA,UAAU,8FADZ,UAYE,wBACEA,UAAWwC,IAAW,SAAU,UAAW,CACzC,aAAcT,GAAaF,IAAqBb,EAAUyB,MAE5DC,KAAK,SACL,UAAQ,aACRC,QAASR,EAAe5B,EAAQS,EAAUyB,KAN5C,4BAWA,wBACEzC,UAAWwC,IAAW,SAAU,UAAW,OAAQ,CACjD,aACET,GAAaF,IAAqBb,EAAU4B,YAEhDF,KAAK,SACL,UAAQ,oBACRC,QAASR,EAAelB,EAAWD,EAAU4B,WAP/C,gCAYA,wBACE5C,UAAWwC,IAAW,SAAU,UAAW,CACzC,aACET,GAAaF,IAAqBb,EAAU6B,UAEhDH,KAAK,SACL,UAAQ,aACRC,QAASR,EAAeZ,EAAaP,EAAU6B,SAPjD,+BAaDZ,EACC,qBACEjC,UAAU,gGADZ,SAUE,mBAAGA,UAAU,kBAAb,sDAKF,mCAAGD,EAAM+C,OAAS,GAAK,cAAC,EAAD,CAAW/C,MAAOA,gB,MCzGvDgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a026010e.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"px-6 py-5\">\n    {goods.map((good) => {\n      const { id, color, name } = good;\n\n      return (\n        <li\n          className={`box is-rounded p-3\n            ${color === 'green' ? 'has-background-success-light' : ''}\n            ${color === 'red' ? 'has-background-danger-light' : ''}\n            ${color === 'blue' ? 'has-background-link-light' : ''}`}\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      );\n    })}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nfunction wait(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport function getAll(): Promise<Good[]> {\n  return wait(250)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then((goods) => goods\n      .sort(({ name: currentGood }, { name: nextGood }) => (\n        currentGood.localeCompare(nextGood)\n      ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then((goods) => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nenum GoodsType {\n  Default,\n  All,\n  FirstFive,\n  OnlyRed,\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [currentGoodsType, setCurrentGoodsType] = useState(GoodsType.Default);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const getLoadHandler = (\n    getGoods: () => Promise<Good[]>,\n    goodsType = GoodsType.Default,\n  ) => {\n    return () => {\n      if (currentGoodsType !== goodsType) {\n        setIsLoading(true);\n        setIsLoadingError(false);\n        getGoods()\n          .then(setGoods)\n          .catch(() => setIsLoadingError(true))\n          .finally(() => setIsLoading(false));\n        setCurrentGoodsType(goodsType);\n      }\n    };\n  };\n\n  return (\n    <div className=\"App \">\n      <div className=\"columns m-3 is-flex is-justify-content-center\">\n        <div className=\"column is-half\">\n          <article className=\"panel is-link\">\n            <h1 className=\"panel-heading has-text-centered\">\n              Dynamic list of Goods\n            </h1>\n\n            <div\n              className=\"\n              panel-block\n              buttons\n              buttons-are-small\n              m-0\n              is-flex\n              is-justify-content-center\n              px-6\n              pt-5\n              pb-2\"\n            >\n              <button\n                className={classnames('button', 'is-link', {\n                  'is-loading': isLoading && currentGoodsType === GoodsType.All,\n                })}\n                type=\"button\"\n                data-cy=\"all-button\"\n                onClick={getLoadHandler(getAll, GoodsType.All)}\n              >\n                Load all goods\n              </button>\n\n              <button\n                className={classnames('button', 'is-link', 'mx-4', {\n                  'is-loading':\n                    isLoading && currentGoodsType === GoodsType.FirstFive,\n                })}\n                type=\"button\"\n                data-cy=\"first-five-button\"\n                onClick={getLoadHandler(get5First, GoodsType.FirstFive)}\n              >\n                Load 5 first goods\n              </button>\n\n              <button\n                className={classnames('button', 'is-link', {\n                  'is-loading':\n                    isLoading && currentGoodsType === GoodsType.OnlyRed,\n                })}\n                type=\"button\"\n                data-cy=\"red-button\"\n                onClick={getLoadHandler(getRedGoods, GoodsType.OnlyRed)}\n              >\n                Load red goods\n              </button>\n            </div>\n\n            {isLoadingError ? (\n              <div\n                className=\"\n                  block\n                  has-background-danger-light\n                  is-flex\n                  is-justify-content-center\n                  is-flex-grow-1\n                  px-6\n                  py-5\"\n              >\n                <p className=\"has-text-danger\">\n                  An error occurred while loading goods!\n                </p>\n              </div>\n            ) : (\n              <>{goods.length > 0 && <GoodsList goods={goods} />}</>\n            )}\n          </article>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}